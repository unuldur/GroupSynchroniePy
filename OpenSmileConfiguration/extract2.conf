
 ///////////////////////////////////////////////////////////////////////////
 // openSMILE configuration template file generated by SMILExtract binary //
 // you must manually adapt this file and change at least the             //
 // 'reader/writer.dmLevel =' lines.                                      //
 ///////////////////////////////////////////////////////////////////////////

 ;===== component manager configuration (= list of enabled components!) =====

[componentInstances:cComponentManager]
 // this line configures the default data memory:
instance[dataMemory].type = cDataMemory
instance[waveSource].type = cWaveSource
instance[framer].type = cFramer
instance[energy].type = cEnergy
instance[intensity].type = cIntensity
instance[win].type = cWindower
instance[fft].type = cTransformFFT
instance[fftmp].type = cFFTmagphase
instance[acf].type = cAcf
instance[cep].type = cAcf
instance[pitch].type = cPitchACF
instance[pitchDirection].type = cPitchDirection
instance[pitchSmoother].type = cPitchSmoother
instance[lpc].type = cLpc
instance[melspec].type = cMelspec
instance[lsp].type = cLsp
instance[vadV1].type = cVadV1
instance[turnDetector].type = cTurnDetector
instance[csvSink].type = cCsvSink
 // Here you can control the amount of detail displayed for the data memory
  // level configuration. 0 is no information at all, 5 is maximum detail.
printLevelStats = 1
 // You can set the number of parallel threads (experimental):
nThreads = 1

// ============= component configuration sections begin here ==============


  ;;;; default (template) configuration section for component 'cWaveSource' ;;;;
[waveSource:cWaveSource]
writer.dmLevel = wave
basePeriod = -1
filename = \cm[inputfile(I):file name of the input wave file]
properTimestamps = 0
monoMixdown = 1
// segmentList[] = 
start = 0
end = -1
endrel = 0
noHeader = 0
outFieldName = pcm
 

  ;;;; default (template) configuration section for component 'cFramer' ;;;;
[framer:cFramer]
reader.dmLevel = wave
writer.dmLevel = waveframes
// nameAppend = 
copyInputName = 1
EOIlevel = 0
allowLastFrameIncomplete = 0
frameMode = fixed
// frameListFile = 
// frameList = 
frameSize = 0.025
frameStep = 0.01
frameCenterSpecial = left
noPostEOIprocessing = 1
 

  ;;;; default (template) configuration section for component 'cEnergy' ;;;;
[energy:cEnergy]
reader.dmLevel = waveframes
writer.dmLevel = energy
nameAppend = energy
copyInputName = 1
EOIlevel = 0
processArrayFields = 0
includeSingleElementFields = 0
preserveFieldNames = 1
htkcompatible = 0
rms = 0
energy2 = 0
log = 1
escaleLog = 1
escaleRms = 1
escaleSquare = 1
ebiasLog = 0
ebiasRms = 01
ebiasSquare = 0
 

  ;;;; default (template) configuration section for component 'cIntensity' ;;;;
[intensity:cIntensity]
reader.dmLevel = waveframes
writer.dmLevel = intensity
// nameAppend = 
copyInputName = 1
EOIlevel = 0
processArrayFields = 1
includeSingleElementFields = 0
preserveFieldNames = 1
intensity = 1
loudness = 1
 
 [win:cWindower]
reader.dmLevel=waveframes
writer.dmLevel=win
winFunc=gauss
gain=1.0
sigma=0.4

[fft:cTransformFFT]
reader.dmLevel=win
writer.dmLevel=fftc

[fftmp:cFFTmagphase]
reader.dmLevel=fftc
writer.dmLevel=fftmag
 
[acf:cAcf]
reader.dmLevel=fftmag
writer.dmLevel=acf

[cep:cAcf]
reader.dmLevel=fftmag
writer.dmLevel=cepstrum
cepstrum=1
 
[pitch:cPitchACF]
reader.dmLevel = acf;cepstrum
writer.dmLevel = pitch
// nameAppend =
copyInputName = 1
processArrayFields = 0
maxPitch = 500
voiceProb = 1
voiceQual = 1
HNR = 0
F0 = 1
F0raw = 0
F0env = 1
voicingCutoff = 0.550000

  ;;;; default (template) configuration section for component 'cPitchDirection' ;;;;
[pitchDirection:cPitchDirection]
reader.dmLevel = intensity; pitch
writer.dmLevel = pitchdirection
// nameAppend = 
copyInputName = 1
EOIlevel = 0
ltbs = 0.200000
stbs = 0.050000
// directionMsgRecp = 
speakingRateBsize = 100
F0direction = 1
directionScore = 1
speakingRate = 1
F0avg = 0
F0smooth = 0
onlyTurn = 0
turnStartMessage = turnStart
turnEndMessage = turnEnd
F0fieldname = F0
F0envFieldname = F0env
LoudnessFieldname = loudness
RMSenergyFieldname = pcm_RMSenergy

[pitchSmoother:cPitchSmoother]
reader.dmLevel = pitch
writer.dmLevel = pitchsmoother



[lpc:cLpc]
reader.dmLevel = waveframes
writer.dmLevel = lpc
// nameAppend = 
copyInputName = 1
EOIlevel = 0
processArrayFields = 1
includeSingleElementFields = 0
preserveFieldNames = 1
method = acf
p = 10
saveLPCoeff = 1
lpGain = 0
saveRefCoeff = 0
residual = 0
residualGainScale = 0
forwardFilter = 0
lpSpectrum = 0
forwardLPspec = 1
forwardLPspecFloor = 0.000000
lpSpecDeltaF = 10
 

  ;;;; default (template) configuration section for component 'cMelspec' ;;;;
[melspec:cMelspec]
reader.dmLevel = fftmag
writer.dmLevel = mspec
 

  ;;;; default (template) configuration section for component 'cLsp' ;;;;
[lsp:cLsp]
reader.dmLevel = lpc
writer.dmLevel = lsp
// nameAppend = 
copyInputName = 1
EOIlevel = 0
processArrayFields = 0
includeSingleElementFields = 0
preserveFieldNames = 1
 

  ;;;; default (template) configuration section for component 'cVadV1' ;;;;
[vadV1:cVadV1]
reader.dmLevel = mspec;lsp;energy
writer.dmLevel = vad1
// nameAppend = 
copyInputName = 1
EOIlevel = 0
threshold = -13
disableDynamicVAD = 0
debug = 0


[turnDetector:cTurnDetector]
reader.dmLevel = energy;vad1
writer.dmLevel = turnDetector
// nameAppend = 
copyInputName = 1
EOIlevel = 0
threshold = 0.55
threshold2 = 0.001000
autoThreshold = 0
minmaxDecay = 0.999500
nPre = 10
nPost = 20
useRMS = 1
readVad = 1
idx = -1
// messageRecp = 
msgInterval = 0
turnFrameTimePreRollSec = 0
turnFrameTimePostRollSec = 0
msgPeriodicMaxLength = 0
sendTurnFrameTimeMessageAtEnd = 1
// eventRecp = 
// statusRecp = 
minTurnLengthTurnFrameTimeMessage = 0
minTurnLength = 0
maxTurnLength = 0
maxTurnLengthGrace = 1
invert = 0
debug = 4
timeoutSec = 2
eoiFramesMissing = 5
unblockTimeout = 60
blockStatus = 0
blockAll = 1
terminateAfterTurns = 0
terminatePostSil = 0
initialBlockTime = 1
eventRecp = turnStart,turnEnd

  ;;;; default (template) configuration section for component 'cCsvSink' ;;;;
[csvSink:cCsvSink]
reader.dmLevel = energy; intensity; pitchdirection; pitchsmoother; turnDetector
errorOnNoOutput = 0
filename = \cm[outputfile(O):file name of the output CSV file].csv
delimChar = ;
append = 0
timestamp = 1
frameTime = 1
number = 1
frameIndex = 1
printHeader = 1
flush = 0
// instanceBase = 
// instanceName = 


 

// ################### END OF openSMILE CONFIG FILE ######################

